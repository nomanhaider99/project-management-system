{"ast":null,"code":"import { inject } from '@angular/core';\nimport { GetproductsService } from 'src/app/services/getproducts.service';\nimport * as i0 from \"@angular/core\";\nexport class TableComponent {\n  constructor() {\n    this.data = [];\n    this.productService = inject(GetproductsService);\n  }\n  ngOnInit() {\n    this.data = this.productService.getData();\n    console.log(first);\n  }\n  static {\n    this.ɵfac = function TableComponent_Factory(t) {\n      return new (t || TableComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TableComponent,\n      selectors: [[\"app-table\"]],\n      decls: 16,\n      vars: 0,\n      consts: [[1, \"bg-white\", \"rounded-md\", \"w-full\"], [1, \"w-full\", \"rounded-lg\"], [1, \"py-2\", \"bg-blue-50\"], [1, \"border-[1px]\", \"border-zinc-300\"], [1, \"text-center\", \"border-x-[1px]\", \"border-zinc-300\"]],\n      template: function TableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\", 2)(3, \"tr\", 3)(4, \"td\", 4);\n          i0.ɵɵtext(5, \"Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"td\", 4);\n          i0.ɵɵtext(7, \"Serial No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"td\", 4);\n          i0.ɵɵtext(9, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"td\", 4);\n          i0.ɵɵtext(11, \"Quantity\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"td\", 4);\n          i0.ɵɵtext(13, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"td\", 4);\n          i0.ɵɵtext(15, \"Actions\");\n          i0.ɵɵelementEnd()()()()();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YWJsZS5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YWJsZS90YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["inject","GetproductsService","TableComponent","constructor","data","productService","ngOnInit","getData","console","log","first","selectors","decls","vars","consts","template","TableComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Noman Data\\angular\\inventory-management-system\\frontend\\src\\app\\components\\table\\table.component.ts","C:\\Noman Data\\angular\\inventory-management-system\\frontend\\src\\app\\components\\table\\table.component.html"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { GetproductsService } from 'src/app/services/getproducts.service';\nimport { productsData, ProductType } from 'src/data/products';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  data: ProductType[] = [];\n  productService = inject(GetproductsService);\n  ngOnInit () {\n    this.data = this.productService.getData() as any;\n    console.log(first)\n  }\n}\n","<div class=\"bg-white rounded-md w-full\">\r\n    <table class=\"w-full rounded-lg\">\r\n        <thead class=\"py-2 bg-blue-50\">\r\n            <tr class=\"border-[1px] border-zinc-300\">\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Id</td>\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Serial No</td>\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Name</td>\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Quantity</td>\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Category</td>\r\n                <td class=\"text-center border-x-[1px] border-zinc-300\">Actions</td>\r\n            </tr>\r\n        </thead>\r\n        <!-- <tbody class=\"text-zinc-700\" *ngFor=\"let product of data\">\r\n            <tr class=\"border-[1px] border-zinc-300\">\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 text-center\">{{product.id}}</td>\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 text-center \">{{product.serialNo}}</td>\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 text-center \">{{product.name}}</td>\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 text-center \">{{product.quantity}}</td>\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 text-center \">{{product.category}}</td>\r\n                <td class=\"py-2 border-x-[1px] border-zinc-300 px-2 flex justify-center items-center gap-2\">\r\n                    <app-button text=\"Disable Product\"></app-button>\r\n                    <app-button [isPrimary]=\"true\" text=\"Edit Product\"></app-button>\r\n                    <app-button text=\"Save\" [disabled]=\"true\"></app-button>\r\n                </td>\r\n            </tr>\r\n        </tbody> -->\r\n    </table>\r\n</div>"],"mappings":"AAAA,SAAoBA,MAAM,QAAgB,eAAe;AACzD,SAASC,kBAAkB,QAAQ,sCAAsC;;AAQzE,OAAM,MAAOC,cAAc;EAL3BC,YAAA;IAME,KAAAC,IAAI,GAAkB,EAAE;IACxB,KAAAC,cAAc,GAAGL,MAAM,CAACC,kBAAkB,CAAC;;EAC3CK,QAAQA,CAAA;IACN,IAAI,CAACF,IAAI,GAAG,IAAI,CAACC,cAAc,CAACE,OAAO,EAAS;IAChDC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB;;;uBANWR,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAS,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT3BE,EAAA,CAAAC,cAAA,aAAwC;UAI+BD,EAAA,CAAAE,MAAA,SAAE;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC9DH,EAAA,CAAAC,cAAA,YAAuD;UAAAD,EAAA,CAAAE,MAAA,gBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACrEH,EAAA,CAAAC,cAAA,YAAuD;UAAAD,EAAA,CAAAE,MAAA,WAAI;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAChEH,EAAA,CAAAC,cAAA,aAAuD;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACpEH,EAAA,CAAAC,cAAA,aAAuD;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACpEH,EAAA,CAAAC,cAAA,aAAuD;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}