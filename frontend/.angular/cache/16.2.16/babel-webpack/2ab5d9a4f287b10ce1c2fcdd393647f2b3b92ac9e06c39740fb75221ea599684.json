{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class GetproductsService {\n  static {\n    this.ɵfac = function GetproductsService_Factory(t) {\n      return new (t || GetproductsService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GetproductsService,\n      factory: GetproductsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["GetproductsService","factory","ɵfac","providedIn"],"sources":["C:\\Noman Data\\angular\\inventory-management-system\\frontend\\src\\app\\services\\getproducts.service.ts"],"sourcesContent":["import { Injectable, signal, WritableSignal } from '@angular/core';\nimport { ProductType } from 'src/data/products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetproductsService implements  {\n  data = signal<ProductType[]>([]);\n  id: WritableSignal<number> = signal(1);\n\n  setId() {\n    return this.id.update(val => val + 1);\n  }\n\n  putData(data: ProductType | any) {\n    data = { ...data, id: this.id() }\n    this.setId();\n    this.data.mutate((value) => value?.push(data))\n  }\n\n  disableProduct(id: number) {\n    this.data.update((product: any) => product?.filter((a: any) => a.id !== id));\n  }\n\n  getData(): ProductType[] | null {\n    return this.data();\n  }\n\n  editData(serialno: string, productname: string, quantity: number, category: string, id: number) {\n    var updatedProducts: any;\n    this.data.mutate((product) => product.find((value) => {\n      if (value.id == id) {\n        value = {category, id, productname, quantity, serialno};\n      }\n      const data = [...product, value];\n      updatedProducts = data;  \n      return data;\n    }));\n\n    return updatedProducts;\n  }\n\n  constructor() {\n    console.log(\"DATA IN SIGNAL: \", this.data());\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;;;uBAAlBA,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAC,OAAA,EAAlBD,kBAAkB,CAAAE,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}