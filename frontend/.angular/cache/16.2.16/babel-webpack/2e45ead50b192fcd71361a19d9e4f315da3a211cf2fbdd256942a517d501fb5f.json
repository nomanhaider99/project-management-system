{"ast":null,"code":"import { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GetproductsService {\n  setId() {\n    return this.id.update(val => val + 1);\n  }\n  putData(data) {\n    data = {\n      ...data,\n      id: this.id()\n    };\n    this.setId();\n    this.data.mutate(value => value?.push(data));\n  }\n  disableProduct(id) {\n    this.data.update(product => product?.filter(a => a.id !== id));\n  }\n  getData() {\n    return this.data();\n  }\n  editData(category, id, productname, quantity, serialno) {\n    let productToBeEdit = this.data.console.log(\"PRODUCT TO BE EDIT: \", productToBeEdit);\n  }\n  constructor() {\n    this.data = signal([]);\n    this.id = signal(1);\n  }\n  static {\n    this.ɵfac = function GetproductsService_Factory(t) {\n      return new (t || GetproductsService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GetproductsService,\n      factory: GetproductsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","GetproductsService","setId","id","update","val","putData","data","mutate","value","push","disableProduct","product","filter","a","getData","editData","category","productname","quantity","serialno","productToBeEdit","console","log","constructor","factory","ɵfac","providedIn"],"sources":["C:\\Noman Data\\angular\\inventory-management-system\\frontend\\src\\app\\services\\getproducts.service.ts"],"sourcesContent":["import { Injectable, signal, WritableSignal } from '@angular/core';\nimport { ProductType } from 'src/data/products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetproductsService {\n  data: WritableSignal<ProductType[] | null> = signal([]);\n  id: WritableSignal<number> = signal(1);\n\n  setId() {\n    return this.id.update(val => val + 1);\n  }\n\n  putData(data: ProductType | any) {\n    data = { ...data, id: this.id() }\n    this.setId();\n    this.data.mutate((value) => value?.push(data))\n  }\n\n  disableProduct(id: number) {\n    this.data.update((product: any) => product?.filter((a: any) => a.id !== id));\n  }\n\n  getData(): ProductType[] | null {\n    return this.data();\n  }\n\n  editData(category: any, id: any, productname: any, quantity: any, serialno: any) {\n    let productToBeEdit = this.data.\n    console.log(\"PRODUCT TO BE EDIT: \", productToBeEdit);\n  }\n\n  constructor() { }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAwB,eAAe;;AAMlE,OAAM,MAAOC,kBAAkB;EAI7BC,KAAKA,CAAA;IACH,OAAO,IAAI,CAACC,EAAE,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,GAAG,CAAC,CAAC;EACvC;EAEAC,OAAOA,CAACC,IAAuB;IAC7BA,IAAI,GAAG;MAAE,GAAGA,IAAI;MAAEJ,EAAE,EAAE,IAAI,CAACA,EAAE;IAAE,CAAE;IACjC,IAAI,CAACD,KAAK,EAAE;IACZ,IAAI,CAACK,IAAI,CAACC,MAAM,CAAEC,KAAK,IAAKA,KAAK,EAAEC,IAAI,CAACH,IAAI,CAAC,CAAC;EAChD;EAEAI,cAAcA,CAACR,EAAU;IACvB,IAAI,CAACI,IAAI,CAACH,MAAM,CAAEQ,OAAY,IAAKA,OAAO,EAAEC,MAAM,CAAEC,CAAM,IAAKA,CAAC,CAACX,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9E;EAEAY,OAAOA,CAAA;IACL,OAAO,IAAI,CAACR,IAAI,EAAE;EACpB;EAEAS,QAAQA,CAACC,QAAa,EAAEd,EAAO,EAAEe,WAAgB,EAAEC,QAAa,EAAEC,QAAa;IAC7E,IAAIC,eAAe,GAAG,IAAI,CAACd,IAAI,CAC/Be,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,eAAe,CAAC;EACtD;EAEAG,YAAA;IA1BA,KAAAjB,IAAI,GAAyCP,MAAM,CAAC,EAAE,CAAC;IACvD,KAAAG,EAAE,GAA2BH,MAAM,CAAC,CAAC,CAAC;EAyBtB;;;uBA3BLC,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAwB,OAAA,EAAlBxB,kBAAkB,CAAAyB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}