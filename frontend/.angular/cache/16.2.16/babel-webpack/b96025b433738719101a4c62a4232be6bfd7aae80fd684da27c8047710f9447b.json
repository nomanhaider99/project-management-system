{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, effect, inject, signal, ViewChild } from '@angular/core';\nimport { GetproductsService } from 'src/app/services/getproducts.service';\nexport let TableComponent = class TableComponent {\n  testRow(serialno) {\n    const product = this.getProductBySerialNumber(serialno);\n    if (product?.serialno === serialno) {\n      console.log(this.row.nativeElement.innerText);\n    }\n    console.log(serialno, product?.serialno);\n  }\n  onDisableData(id) {\n    this.productService.disableProduct(id);\n    this.productService.getData();\n  }\n  getProductBySerialNumber(serialno) {\n    return this.data.find(value => value.serialno === serialno);\n  }\n  editData(id) {\n    this.data = this.productService.editData(this.serialno.nativeElement.textContent, this.productname.nativeElement.textContent, Number(this.quantity.nativeElement.textContent), this.category.nativeElement.textContent, id);\n  }\n  constructor() {\n    this.data = [];\n    this.productService = inject(GetproductsService);\n    this.EditComponent = false;\n    this.disabled = true;\n    this.cellId = signal(undefined);\n    effect(() => {\n      this.data = this.productService.getData();\n    });\n    // console.log(\"DATA: \",this.data)\n  }\n};\n\n__decorate([ViewChild('row')], TableComponent.prototype, \"row\", void 0);\n__decorate([ViewChild('id')], TableComponent.prototype, \"id\", void 0);\n__decorate([ViewChild('quantity')], TableComponent.prototype, \"quantity\", void 0);\n__decorate([ViewChild('serialno')], TableComponent.prototype, \"serialno\", void 0);\n__decorate([ViewChild('category')], TableComponent.prototype, \"category\", void 0);\n__decorate([ViewChild('productname')], TableComponent.prototype, \"productname\", void 0);\nTableComponent = __decorate([Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})], TableComponent);","map":{"version":3,"names":["Component","effect","inject","signal","ViewChild","GetproductsService","TableComponent","testRow","serialno","product","getProductBySerialNumber","console","log","row","nativeElement","innerText","onDisableData","id","productService","disableProduct","getData","data","find","value","editData","textContent","productname","Number","quantity","category","constructor","EditComponent","disabled","cellId","undefined","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Noman Data\\angular\\inventory-management-system\\frontend\\src\\app\\components\\table\\table.component.ts"],"sourcesContent":["import { Component, effect, ElementRef, inject, signal, ViewChild } from '@angular/core';\nimport { GetproductsService } from 'src/app/services/getproducts.service';\nimport { ProductType } from 'src/data/products';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent {\n  data: ProductType[] = [];\n  productService = inject(GetproductsService);\n  EditComponent: boolean = false;\n  disabled: boolean = true;\n  cellId = signal<number | undefined>(undefined);\n  @ViewChild('row') row!: ElementRef<HTMLTableRowElement>\n  @ViewChild('id') id!: ElementRef<HTMLTableCellElement>\n  @ViewChild('quantity') quantity!: ElementRef<HTMLTableCellElement>\n  @ViewChild('serialno') serialno!: ElementRef<HTMLTableCellElement>\n  @ViewChild('category') category!: ElementRef<HTMLTableCellElement>\n  @ViewChild('productname') productname!: ElementRef<HTMLTableCellElement>\n\n  \n  testRow (serialno: string) {\n    const product = this.getProductBySerialNumber(serialno)\n    if (product?.serialno === serialno) {\n      console.log(this.row.nativeElement.innerText);\n    }\n    console.log(serialno, product?.serialno);\n  }\n\n  onDisableData(id: number): any {\n    this.productService.disableProduct(id);\n    this.productService.getData();\n  }\n\n  getProductBySerialNumber(serialno: string) {\n    return this.data.find((value) => value.serialno === serialno);\n  }\n\n  editData(id: number) {\n    this.data = this.productService.editData(this.serialno.nativeElement.textContent!, this.productname.nativeElement.textContent!, Number(this.quantity.nativeElement.textContent), this.category.nativeElement.textContent!, id);\n  }\n\n\n  constructor() {\n    effect(() => {\n      this.data = this.productService.getData() as any;\n    })\n    // console.log(\"DATA: \",this.data)\n  }\n} "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAcC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACxF,SAASC,kBAAkB,QAAQ,sCAAsC;AAQlE,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAczBC,OAAOA,CAAEC,QAAgB;IACvB,MAAMC,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACF,QAAQ,CAAC;IACvD,IAAIC,OAAO,EAAED,QAAQ,KAAKA,QAAQ,EAAE;MAClCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAACC,aAAa,CAACC,SAAS,CAAC;;IAE/CJ,OAAO,CAACC,GAAG,CAACJ,QAAQ,EAAEC,OAAO,EAAED,QAAQ,CAAC;EAC1C;EAEAQ,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACC,cAAc,CAACC,cAAc,CAACF,EAAE,CAAC;IACtC,IAAI,CAACC,cAAc,CAACE,OAAO,EAAE;EAC/B;EAEAV,wBAAwBA,CAACF,QAAgB;IACvC,OAAO,IAAI,CAACa,IAAI,CAACC,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACf,QAAQ,KAAKA,QAAQ,CAAC;EAC/D;EAEAgB,QAAQA,CAACP,EAAU;IACjB,IAAI,CAACI,IAAI,GAAG,IAAI,CAACH,cAAc,CAACM,QAAQ,CAAC,IAAI,CAAChB,QAAQ,CAACM,aAAa,CAACW,WAAY,EAAE,IAAI,CAACC,WAAW,CAACZ,aAAa,CAACW,WAAY,EAAEE,MAAM,CAAC,IAAI,CAACC,QAAQ,CAACd,aAAa,CAACW,WAAW,CAAC,EAAE,IAAI,CAACI,QAAQ,CAACf,aAAa,CAACW,WAAY,EAAER,EAAE,CAAC;EAChO;EAGAa,YAAA;IAnCA,KAAAT,IAAI,GAAkB,EAAE;IACxB,KAAAH,cAAc,GAAGhB,MAAM,CAACG,kBAAkB,CAAC;IAC3C,KAAA0B,aAAa,GAAY,KAAK;IAC9B,KAAAC,QAAQ,GAAY,IAAI;IACxB,KAAAC,MAAM,GAAG9B,MAAM,CAAqB+B,SAAS,CAAC;IAgC5CjC,MAAM,CAAC,MAAK;MACV,IAAI,CAACoB,IAAI,GAAG,IAAI,CAACH,cAAc,CAACE,OAAO,EAAS;IAClD,CAAC,CAAC;IACF;EACF;CACD;;AApCmBe,UAAA,EAAjB/B,SAAS,CAAC,KAAK,CAAC,C,0CAAsC;AACtC+B,UAAA,EAAhB/B,SAAS,CAAC,IAAI,CAAC,C,yCAAsC;AAC/B+B,UAAA,EAAtB/B,SAAS,CAAC,UAAU,CAAC,C,+CAA4C;AAC3C+B,UAAA,EAAtB/B,SAAS,CAAC,UAAU,CAAC,C,+CAA4C;AAC3C+B,UAAA,EAAtB/B,SAAS,CAAC,UAAU,CAAC,C,+CAA4C;AACxC+B,UAAA,EAAzB/B,SAAS,CAAC,aAAa,CAAC,C,kDAA+C;AAX7DE,cAAc,GAAA6B,UAAA,EAL1BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhC,cAAc,CA0C1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}